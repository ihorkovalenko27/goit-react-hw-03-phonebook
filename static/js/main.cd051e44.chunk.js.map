{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","components/section/Section.js","components/contactForm/ContactForm.js","components/contactsList/ContactList.js","components/filter/Filter.js","App.js","index.js","components/contactsList/ContactList.module.css"],"names":["module","exports","Section","title","children","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","revisionContact","props","contacts","find","contact","toLowerCase","console","log","alert","reset","onSubmit","className","s","form","this","type","onChange","pattern","required","Component","ContactList","onDeleteContact","map","id","btn","onClick","Filter","input","App","filter","addNewContact","newUserData","shortid","generate","removeContact","prevState","filterContacts","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,wB,uICkBXC,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,8BACE,oCACGD,GAAS,6BAAKA,IACdC,Q,yBCJHC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClB,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRQ,EAAkB,EAAKC,MAAMC,SAASC,MAC1C,SAAAC,GAAO,OAAIA,EAAQb,KAAKc,gBAAkBd,EAAKc,iBAGjD,GADAC,QAAQC,IAAIP,GACRA,EAGF,OAFAQ,MAAM,GAAD,OAAIjB,EAAJ,iCACL,EAAKkB,QAGP,EAAKR,MAAMS,SAASnB,EAAMC,GAC1B,EAAKiB,S,EAGPA,MAAQ,WACN,EAAKZ,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMmB,UAAWC,IAAEC,KAAMH,SAAUI,KAAKhB,aAAxC,UACE,yCAEE,uBACEiB,KAAK,OACLxB,KAAK,OACLK,MAAOkB,KAAKxB,MAAMC,KAClByB,SAAUF,KAAKrB,kBACfwB,QAAQ,yHACR9B,MAAM,kcACN+B,UAAQ,OAGZ,2CAEE,uBACEH,KAAK,MACLxB,KAAK,SACLK,MAAOkB,KAAKxB,MAAME,OAClBwB,SAAUF,KAAKrB,kBACfwB,QAAQ,yFACR9B,MAAM,giBACN+B,UAAQ,OAGZ,wBAAQH,KAAK,SAAb,iC,GA1DkBI,aAqEX9B,I,gBCnDA+B,EAlBK,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,SAAUmB,EAAsB,EAAtBA,gBAC/B,OACE,qCACE,0CACA,oBAAIV,UAAWC,IAAEV,SAAjB,SACGA,EAASoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,iCAAOD,EAAP,OADF,IACuB,+BAAOC,IAC5B,wBAAQmB,UAAWC,IAAEY,IAAKT,KAAK,SAASU,QAAS,kBAAMJ,EAAgBE,IAAvE,sBAFOA,Y,iBCEJG,EATA,SAAC,GAAyB,IAAvB9B,EAAsB,EAAtBA,MAAOoB,EAAe,EAAfA,SACvB,OACE,4DAC0B,IACxB,uBAAOL,UAAWC,IAAEe,MAAOZ,KAAK,OAAOnB,MAAOA,EAAOoB,SAAUA,QCA/DY,E,4MACJtC,MAAQ,CACNY,SAAU,CACR,CAAEqB,GAAI,OAAQhC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE+B,GAAI,OAAQhC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE+B,GAAI,OAAQhC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE+B,GAAI,OAAQhC,KAAM,iBAAkBC,OAAQ,cAEhDqC,OAAQ,I,EAiBVC,cAAgB,SAACvC,EAAMC,GACrB,IAAMuC,EAAc,CAClBR,GAAIS,IAAQC,WACZ1C,OACAC,UAGF,EAAKK,UAAS,gBAAGK,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE6B,GAAH,mBAAmB7B,S,EAI/BgC,cAAgB,SAAAX,GACd,EAAK1B,UAAS,SAAAsC,GAAS,MAAK,CAC1BjC,SAAUiC,EAAUjC,SAAS2B,QAAO,SAAAzB,GAAO,OAAIA,EAAQmB,KAAOA,U,EAIlEa,eAAiB,SAAA1C,GACf,EAAKG,SAAS,CAAEgC,OAAQnC,EAAMC,cAAcC,S,EAG9CyC,mBAAqB,WACnB,IAAMC,EAAmB,EAAKhD,MAAMuC,OAAOxB,cAC3C,OAAO,EAAKf,MAAMY,SAAS2B,QAAO,SAAAzB,GAAO,OACvCA,EAAQb,KAAKc,cAAckC,SAASD,O,uDAvCxC,WACE,IAAMpC,EAAWsC,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM1C,GAC9BwC,GACF5B,KAAKjB,SAAS,CAAEK,SAAUwC,M,gCAI9B,SAAmBG,EAAWV,GACxBrB,KAAKxB,MAAMY,WAAaiC,EAAUjC,UACpCsC,aAAaM,QAAQ,WAAYH,KAAKI,UAAUjC,KAAKxB,MAAMY,a,oBAiC/D,WACE,IAAM8C,EAAkBlC,KAAKuB,qBAC7B,OACE,mCACE,eAAC,EAAD,CAASlD,MAAM,YAAf,UACE,cAAC,EAAD,CAAauB,SAAUI,KAAKgB,cAAe5B,SAAUY,KAAKxB,MAAMY,WAChE,cAAC,EAAD,CAAQN,MAAOkB,KAAKxB,MAAMuC,OAAQb,SAAUF,KAAKsB,iBACjD,cAAC,EAAD,CAAalC,SAAU8C,EAAiB3B,gBAAiBP,KAAKoB,yB,GA7DtDf,aAoEHS,ICvEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BrE,EAAOC,QAAU,CAAC,SAAW,8BAA8B,OAAS,4BAA4B,IAAM,4B","file":"static/js/main.cd051e44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3dVut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3-5RR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <section>\n        {title && <h1>{title}</h1>}\n        {children}\n      </section>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const revisionContact = this.props.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    console.log(revisionContact);\n    if (revisionContact) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contacts</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <ul className={s.contacts}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <span>{name}:</span> <span>{number}</span>\n            <button className={s.btn} type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n","import React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Filter contacts by name{' '}\n      <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactsList/ContactList';\nimport Filter from './components/filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const newUserData = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newUserData, ...contacts],\n    }));\n  };\n\n  removeContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterContacts = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addNewContact} contacts={this.state.contacts} />\n          <Filter value={this.state.filter} onChange={this.filterContacts} />\n          <ContactList contacts={visibleContacts} onDeleteContact={this.removeContact} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3NCY6\",\"filter\":\"ContactList_filter__kdMOw\",\"btn\":\"ContactList_btn__29xVq\"};"],"sourceRoot":""}